---
title: Use mapping as a way of thinking
date: 2015-04-07
...

Mapping is reducing unnecessary details and give a structure to the remaining ones.

For learning and thinking, the way to establish the structure is by asking "why" for every bit of assertion and knowledge.

Excerpt from *Thinking about Thinking*:

> As software engineers, we might describe learning as forming associations between referents. The sky is blue. The rain in Spain falls mainly on the plain. We might call these learned facts \`knowledge packets’: little bits of truth (or errors) that we possess.
One can go a long way on knowledge packets. Early learning (as directed by adults) for most children focuses almost entirely on the acquisition of knowledge packets. Things that one should or should not do. Methods for performing tasks. Data to be retained and later recovered on demand.

> The trick with knowledge packets is to identify key features of the situation, and determine what action to take. One can get A Levels and degrees, drive cars, even chat up members of the opposite sex by using knowledge packets. Very adept knowledge packet users can fill their heads with megabytes of procedural tax law and become accountants earning six figure sums. Some politicians omit the pattern recognition stage and use a single all-purpose knowledge packet for everything.

> Of course, we don’t just stack up knowledge packets like dinner plates in our heads. From our earliest years our natural response to gaining each new knowledge packet is to ask, `Why?’

> We attempt to connect up knowledge packets to create a structure within our knowledge, a mental map that gives us understanding of the causes and effects within a situation. This understanding allows us to derive a solution to any problem within the situation, instead of attempting to select a rote-learned response.

> In later life, we must spend periods of reflection, or daydreaming, where we trace through the relationships between that which we know. This broadens our integrated map, and allows us to identify structures in the map that apply in different areas. We can then get a deeper map, where what mathematicians call \`isomorphism’ provides what software engineers call \`inheritance’, allowing us to reapply knowledge.

> We rearrange our mental maps to produce simpler expressions, and allow more understanding to be held in the mind at once. When we find a simpler way of looking at things, we find it hard to remember what it was like when the topic seemed complicated, and we ourselves have grown. With understanding, where does the self end and the data begin? With knowledge packets, the division is clear.

> We become adept at using techniques in reflection that allow us to explore our maps, and the knowledge packets we have not yet connected. There are likely to be neurological underpinnings to what we do when we reflect, but some kind of abstract pattern recognition activity must be under way. We learn to use our brains.

> Without understanding there can be little intelligent action. Without mental maps there can be no understanding. Without reflection, there can be no mental maps, only knowledge packets.

> There are computer data structures, called \`ontologies’, that hold vast numbers of truths in networks associated by a form of predicate logic. The CYC database for example, can use maps of the meanings of natural language well enough to interpret photograph captions and find examples for pictures needed by journalists.
